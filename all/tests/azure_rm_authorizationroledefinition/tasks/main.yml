- name: Prepare random number
  set_fact:
    random_postfix: "{{ 1000 | random }}"
  run_once: yes

- name: Create instance of RoleDefinitions -- check mode
  azure_rm_authorizationroledefinition:
    scope: "/subscriptions/{{ azure_subscription_id }}"
    role_definition_id: rolexyz
    properties_permissions:
      - actions:
          - XXXX - list of values -- not implemented str
        not_actions:
          - XXXX - list of values -- not implemented str
    properties_assignable_scopes:
      - XXXX - list of values -- not implemented str
  check_mode: yes
  register: output
- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed

- name: Create instance of RoleDefinitions
  azure_rm_authorizationroledefinition:
    scope: "/subscriptions/{{ azure_subscription_id }}"
    role_definition_id: rolexyz
    properties_permissions:
      - actions:
          - XXXX - list of values -- not implemented str
        not_actions:
          - XXXX - list of values -- not implemented str
    properties_assignable_scopes:
      - XXXX - list of values -- not implemented str
  register: output
- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed
      - output.state == 'Ready'

- name: Update instance of RoleDefinitions
  azure_rm_authorizationroledefinition:
    scope: "/subscriptions/{{ azure_subscription_id }}"
    role_definition_id: rolexyz
    properties_permissions:
      - actions:
          - XXXX - list of values -- not implemented str
        not_actions:
          - XXXX - list of values -- not implemented str
    properties_assignable_scopes:
      - XXXX - list of values -- not implemented str
  register: output
- name: Assert the state has not changed
  assert:
    that:
      - output.changed == false
      - output.state == 'Ready'

- name: Delete instance of RoleDefinitions -- check mode
  azure_rm_authorizationroledefinition:
    scope: "/subscriptions/{{ azure_subscription_id }}"
    role_definition_id: rolexyz
    state: absent
  check_mode: yes
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed

- name: Delete instance of RoleDefinitions
  azure_rm_authorizationroledefinition:
    scope: "/subscriptions/{{ azure_subscription_id }}"
    role_definition_id: rolexyz
    state: absent
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed

- name: Delete unexisting instance of RoleDefinitions
  azure_rm_authorizationroledefinition:
    scope: "/subscriptions/{{ azure_subscription_id }}"
    role_definition_id: rolexyz
    state: absent
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed == false
