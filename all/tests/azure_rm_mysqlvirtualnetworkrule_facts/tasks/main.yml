- name: Prepare random number
  set_fact:
    rpfx: "{{ 1000 | random }}{{ resource_group | hash('md5') | truncate(7, True, '') }}"
  run_once: yes

- name: Create MySQL Server
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
    sku:
      name: MYSQLB50
      tier: basic
    location: westus
    version: 5.6
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
- name: Create a virtual network
  azure_rm_virtualnetwork:
    name: vnet{{ rpfx }}
    resource_group: "{{ resource_group }}"
    address_prefixes_cidr:
        - 10.1.0.0/16
        - 172.100.0.0/16
    dns_servers:
        - 127.0.0.1
        - 127.0.0.2
- name: Create a subnet
  azure_rm_subnet:
    name: subnet{{ rpfx }}
    virtual_network_name: vnet{{ rpfx }}
    resource_group: "{{ resource_group }}"
    address_prefix_cidr: 10.1.0.0/24
- name: Create Virtual Network Rule
  azure_rm_mysqlvirtualnetworkrule:
    resource_group: "{{ resource_group }}"
    server_name: mysqlsrv{{ rpfx }}
    name: test-virtual-network-rule
    virtual_network_subnet_id: /subscriptions/{{ azure_subscription_id }}/resourceGroups/{{ resource_group }}/providers/Microsoft.Network/virtualNetworks/vnet{{ rpfx }}/subnets/subnet{{ rpfx }}
- name: Create Virtual Network Rule
  azure_rm_mysqlvirtualnetworkrule:
    resource_group: "{{ resource_group }}"
    server_name: mysqlsrv{{ rpfx }}
    name: test-virtual-network-rulesecond
    virtual_network_subnet_id: /subscriptions/{{ azure_subscription_id }}/resourceGroups/{{ resource_group }}/providers/Microsoft.Network/virtualNetworks/vnet{{ rpfx }}/subnets/subnet{{ rpfx }}

- name: Gather facts MySQL Virtual Network Rule
  azure_rm_mysqlvirtualnetworkrule_facts:
    resource_group: "{{ resource_group }}"
    server_name: mysqlsrv{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.virtual_network_rules.xxxunknownxxx.id != None

- name: Gather facts MySQL Virtual Network Rule
  azure_rm_mysqlvirtualnetworkrule_facts:
    resource_group: "{{ resource_group }}"
    server_name: mysqlsrv{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.virtual_network_rules.xxxunknownxxx.id != None
      - output.virtual_network_rules.xxxunknownxxxsecond.id != None

- name: Delete instance of Virtual Network Rule
  azure_rm_mysqlvirtualnetworkrule:
    resource_group: "{{ resource_group }}"
    server_name: mysqlsrv{{ rpfx }}
    name: test-virtual-network-rule
    state: absent
- name: Delete instance of Virtual Network Rule
  azure_rm_mysqlvirtualnetworkrule:
    resource_group: "{{ resource_group }}"
    server_name: mysqlsrv{{ rpfx }}
    name: test-virtual-network-rulesecond
    state: absent

- name: Gather facts MySQL Virtual Network Rule
  azure_rm_mysqlvirtualnetworkrule_facts:
    resource_group: "{{ resource_group }}"
    server_name: mysqlsrv{{ rpfx }}
  register: output
- name: Assert that empty dictionary was returned
  assert:
    that:
      - output.changed == False
      - "'xxxunknownxxx' not in output.virtual_network_rules"
      - "'xxxunknownxxxsecond' not in output.virtual_network_rules"

- name: Gather facts MySQL Virtual Network Rule
  azure_rm_mysqlvirtualnetworkrule_facts:
    resource_group: "{{ resource_group }}"
    server_name: mysqlsrv{{ rpfx }}
  register: output
- name: Assert that empty dictionary was returned
  assert:
    that:
      - output.changed == False
      - "'xxxunknownxxx' not in output.virtual_network_rules"
      - "'xxxunknownxxxsecond' not in output.virtual_network_rules"

- name: Delete instance of MySQL Server
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
    state: absent
- name: Delete instance of MySQL Server
  azure_rm_mysqlserver:
    resource_group: "{{ resource_group }}"
    name: mysqlsrv{{ rpfx }}
    state: absent
