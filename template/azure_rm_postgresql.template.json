{
  "Modules": [
    {
      "ModuleName": "azure_rm_postgresqlserver",
      "ModuleNameAlt": "azure_rm_postgresqlserver",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "\"postgresqlsrv{{ random_postfix }}{{ resource_group | hash('md5') | truncate(7, True, '') }}\"",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The required parameters for creating or updating a server.",
          "DefaultValue": null,
          "DefaultValueSample": "parameters",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "sku",
          "NameAlt": "sku",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The SKU (pricing tier) of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "sku",
          "DefaultValueTest": "",
          "SubOptions": [
            {
              "Name": "name",
              "NameAlt": "name",
              "Disposition": "default",
              "Type": "str",
              "IsList": false,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "The name of the sku, typically, a letter + Number code, e.g. P3.",
              "DefaultValue": null,
              "DefaultValueSample": "name",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0,
              "NoLog": false
            },
            {
              "Name": "tier",
              "NameAlt": "tier",
              "Disposition": "default",
              "Type": "str",
              "IsList": false,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "The tier of the particular SKU, e.g. Basic. Possible values include: 'Basic', 'Standard'",
              "DefaultValue": null,
              "DefaultValueSample": "tier",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0,
              "NoLog": false
            },
            {
              "Name": "capacity",
              "NameAlt": "capacity",
              "Disposition": "default",
              "Type": "int",
              "IsList": false,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "The scale up/out capacity, representing server's compute units.",
              "DefaultValue": null,
              "DefaultValueSample": "capacity",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0,
              "NoLog": false
            },
            {
              "Name": "size",
              "NameAlt": "size",
              "Disposition": "default",
              "Type": "str",
              "IsList": false,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "The size code, to be interpreted by resource as appropriate.",
              "DefaultValue": null,
              "DefaultValueSample": "size",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0,
              "NoLog": false
            },
            {
              "Name": "family",
              "NameAlt": "family",
              "Disposition": "default",
              "Type": "str",
              "IsList": false,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "The family of hardware.",
              "DefaultValue": null,
              "DefaultValueSample": "family",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0,
              "NoLog": false
            }
          ],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "properties",
          "NameAlt": "properties",
          "Disposition": "parameters:dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Properties of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "properties",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "location",
          "NameAlt": "location",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The location the resource resides in.",
          "DefaultValue": null,
          "DefaultValueSample": "location",
          "DefaultValueTest": "westus",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "storage_mb",
          "NameAlt": "storage_mb",
          "Disposition": "parameters:properties",
          "Type": "long",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The maximum storage allowed for a server.",
          "DefaultValue": null,
          "DefaultValueSample": "storage_mb",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "version",
          "NameAlt": "version",
          "Disposition": "parameters:properties",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Server version. Possible values include: '9.5', '9.6'",
          "DefaultValue": null,
          "DefaultValueSample": "version",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "ssl_enforcement",
          "NameAlt": "ssl_enforcement",
          "Disposition": "parameters:properties",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Enable ssl enforcement or not when connect to server. Possible values include: 'Enabled', 'Disabled'",
          "DefaultValue": null,
          "DefaultValueSample": "ssl_enforcement",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "create_mode",
          "NameAlt": "create_mode",
          "Disposition": "parameters:properties",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "Constant filled by server.",
          "DefaultValue": null,
          "DefaultValueSample": "create_mode",
          "DefaultValueTest": "Default",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "administrator_login",
          "NameAlt": "admin_username",
          "Disposition": "parameters:properties",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "DefaultValue": null,
          "DefaultValueSample": "administrator_login",
          "DefaultValueTest": "zimxyz",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "administrator_login_password",
          "NameAlt": "admin_password",
          "Disposition": "parameters:properties",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The password of the administrator login.",
          "DefaultValue": null,
          "DefaultValueSample": "administrator_login_password",
          "DefaultValueTest": "Testpasswordxyz12!",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": true
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        },
        {
          "Name": "create",
          "Options": [
            "resource_group_name",
            "server_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "parameters"
          ]
        },
        {
          "Name": "update",
          "Options": [
            "resource_group_name",
            "server_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "ResponseFields": [
        {
          "Name": "id",
          "NameAlt": "id",
          "Description": "Resource ID",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "id",
          "SubFields": []
        },
        {
          "Name": "name",
          "NameAlt": "x",
          "Description": "Resource name.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "name",
          "SubFields": []
        },
        {
          "Name": "type",
          "NameAlt": "x",
          "Description": "Resource type.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "type",
          "SubFields": []
        },
        {
          "Name": "location",
          "NameAlt": "x",
          "Description": "The location the resource resides in.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "location",
          "SubFields": []
        },
        {
          "Name": "tags",
          "NameAlt": "x",
          "Description": "Application-specific metadata in the form of key-value pairs.",
          "Type": "complex",
          "Returned": "always",
          "SampleValue": "tags",
          "SubFields": []
        },
        {
          "Name": "sku",
          "NameAlt": "x",
          "Description": "The SKU (pricing tier) of the server.",
          "Type": "complex",
          "Returned": "always",
          "SampleValue": "sku",
          "SubFields": [
            {
              "Name": "name",
              "NameAlt": "x",
              "Description": "The name of the sku, typically, a letter + Number code, e.g. P3.",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "name",
              "SubFields": []
            },
            {
              "Name": "tier",
              "NameAlt": "x",
              "Description": "The tier of the particular SKU, e.g. Basic. Possible values include: 'Basic', 'Standard'",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "tier",
              "SubFields": []
            },
            {
              "Name": "capacity",
              "NameAlt": "x",
              "Description": "The scale up/out capacity, representing server's compute units.",
              "Type": "int",
              "Returned": "always",
              "SampleValue": "capacity",
              "SubFields": []
            },
            {
              "Name": "size",
              "NameAlt": "x",
              "Description": "The size code, to be interpreted by resource as appropriate.",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "size",
              "SubFields": []
            },
            {
              "Name": "family",
              "NameAlt": "x",
              "Description": "The family of hardware.",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "family",
              "SubFields": []
            }
          ]
        },
        {
          "Name": "administrator_login",
          "NameAlt": "x",
          "Description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "administrator_login",
          "SubFields": []
        },
        {
          "Name": "storage_mb",
          "NameAlt": "x",
          "Description": "The maximum storage allowed for a server.",
          "Type": "long",
          "Returned": "always",
          "SampleValue": "storage_mb",
          "SubFields": []
        },
        {
          "Name": "version",
          "NameAlt": "version",
          "Description": "Server version. Possible values include: '9.5', '9.6'",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "version",
          "SubFields": []
        },
        {
          "Name": "ssl_enforcement",
          "NameAlt": "x",
          "Description": "Enable ssl enforcement or not when connect to server. Possible values include: 'Enabled', 'Disabled'",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "ssl_enforcement",
          "SubFields": []
        },
        {
          "Name": "user_visible_state",
          "NameAlt": "user_visible_state",
          "Description": "A state of a server that is visible to user. Possible values include: 'Ready', 'Dropping', 'Disabled'",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "user_visible_state",
          "SubFields": []
        },
        {
          "Name": "fully_qualified_domain_name",
          "NameAlt": "fully_qualified_domain_name",
          "Description": "The fully qualified domain name of a server.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "fully_qualified_domain_name",
          "SubFields": []
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "user_visible_state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Servers",
      "ModuleOperationName": "servers",
      "ObjectName": "PostgreSQL Server",
      "ReleaseStatus": "RP",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqlserver_facts",
      "ModuleNameAlt": "azure_rm_postgresqlserver_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        },
        {
          "Name": "list_by_resource_group",
          "Options": [
            "resource_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name"
          ]
        }
      ],
      "ResponseFields": null,
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Servers",
      "ModuleOperationName": "servers",
      "ObjectName": "Servers",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqlfirewallrule",
      "ModuleNameAlt": "azure_rm_postgresqlfirewallrule",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "firewall_rule_name",
          "NameAlt": "firewall_rule_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server firewall rule.",
          "DefaultValue": null,
          "DefaultValueSample": "firewall_rule_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The required parameters for creating or updating a firewall rule.",
          "DefaultValue": null,
          "DefaultValueSample": "parameters",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "start_ip_address",
          "NameAlt": "start_ip_address",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The start IP address of the server firewall rule. Must be IPv4 format.",
          "DefaultValue": null,
          "DefaultValueSample": "start_ip_address",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "end_ip_address",
          "NameAlt": "end_ip_address",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The end IP address of the server firewall rule. Must be IPv4 format.",
          "DefaultValue": null,
          "DefaultValueSample": "end_ip_address",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ]
        }
      ],
      "ResponseFields": [
        {
          "Name": "id",
          "NameAlt": "id",
          "Description": "Resource ID",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "id",
          "SubFields": []
        },
        {
          "Name": "name",
          "NameAlt": "x",
          "Description": "Resource name.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "name",
          "SubFields": []
        },
        {
          "Name": "type",
          "NameAlt": "x",
          "Description": "Resource type.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "type",
          "SubFields": []
        },
        {
          "Name": "start_ip_address",
          "NameAlt": "x",
          "Description": "The start IP address of the server firewall rule. Must be IPv4 format.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "start_ip_address",
          "SubFields": []
        },
        {
          "Name": "end_ip_address",
          "NameAlt": "x",
          "Description": "The end IP address of the server firewall rule. Must be IPv4 format.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "end_ip_address",
          "SubFields": []
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "FirewallRules",
      "ModuleOperationName": "firewall_rules",
      "ObjectName": "FirewallRules",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqlfirewallrule_facts",
      "ModuleNameAlt": "azure_rm_postgresqlfirewallrule_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false
        },
        {
          "Name": "firewall_rule_name",
          "NameAlt": "firewall_rule_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the server firewall rule.",
          "DefaultValue": null,
          "DefaultValueSample": "firewall_rule_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "ResponseFields": null,
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "FirewallRules",
      "ModuleOperationName": "firewall_rules",
      "ObjectName": "FirewallRules",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqlvirtualnetworkrule",
      "ModuleNameAlt": "azure_rm_postgresqlvirtualnetworkrule",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "virtual_network_rule_name",
          "NameAlt": "virtual_network_rule_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the virtual network rule.",
          "DefaultValue": null,
          "DefaultValueSample": "virtual_network_rule_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The requested virtual Network Rule Resource state.",
          "DefaultValue": null,
          "DefaultValueSample": "parameters",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "virtual_network_subnet_id",
          "NameAlt": "virtual_network_subnet_id",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The ARM resource id of the virtual network subnet.",
          "DefaultValue": null,
          "DefaultValueSample": "virtual_network_subnet_id",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "ignore_missing_vnet_service_endpoint",
          "NameAlt": "ignore_missing_vnet_service_endpoint",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
          "DefaultValue": null,
          "DefaultValueSample": "ignore_missing_vnet_service_endpoint",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ]
        }
      ],
      "ResponseFields": [
        {
          "Name": "id",
          "NameAlt": "id",
          "Description": "Resource ID",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "id",
          "SubFields": []
        },
        {
          "Name": "name",
          "NameAlt": "x",
          "Description": "Resource name.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "name",
          "SubFields": []
        },
        {
          "Name": "type",
          "NameAlt": "x",
          "Description": "Resource type.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "type",
          "SubFields": []
        },
        {
          "Name": "virtual_network_subnet_id",
          "NameAlt": "x",
          "Description": "The ARM resource id of the virtual network subnet.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "virtual_network_subnet_id",
          "SubFields": []
        },
        {
          "Name": "ignore_missing_vnet_service_endpoint",
          "NameAlt": "x",
          "Description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "ignore_missing_vnet_service_endpoint",
          "SubFields": []
        },
        {
          "Name": "state",
          "NameAlt": "state",
          "Description": "Virtual Network Rule State. Possible values include: 'Initializing', 'InProgress', 'Ready', 'Deleting', 'Unknown'",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "state",
          "SubFields": []
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "VirtualNetworkRules",
      "ModuleOperationName": "virtual_network_rules",
      "ObjectName": "VirtualNetworkRules",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqlvirtualnetworkrule_facts",
      "ModuleNameAlt": "azure_rm_postgresqlvirtualnetworkrule_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false
        },
        {
          "Name": "virtual_network_rule_name",
          "NameAlt": "virtual_network_rule_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the virtual network rule.",
          "DefaultValue": null,
          "DefaultValueSample": "virtual_network_rule_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "ResponseFields": null,
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "VirtualNetworkRules",
      "ModuleOperationName": "virtual_network_rules",
      "ObjectName": "VirtualNetworkRules",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqldatabase",
      "ModuleNameAlt": "azure_rm_postgresqldatabase",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "\"postgresqlsrv{{ random_postfix }}{{ resource_group | hash('md5') | truncate(7, True, '') }}\"",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "database_name",
          "NameAlt": "name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValue": null,
          "DefaultValueSample": "database_name",
          "DefaultValueTest": "testdatabase",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The required parameters for creating or updating a database.",
          "DefaultValue": null,
          "DefaultValueSample": "parameters",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "charset",
          "NameAlt": "charset",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The charset of the database.",
          "DefaultValue": null,
          "DefaultValueSample": "charset",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "collation",
          "NameAlt": "collation",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The collation of the database.",
          "DefaultValue": null,
          "DefaultValueSample": "collation",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        }
      ],
      "ResponseFields": [
        {
          "Name": "id",
          "NameAlt": "id",
          "Description": "Resource ID",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "id",
          "SubFields": []
        },
        {
          "Name": "name",
          "NameAlt": "name",
          "Description": "Resource name.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "name",
          "SubFields": []
        },
        {
          "Name": "type",
          "NameAlt": "x",
          "Description": "Resource type.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "type",
          "SubFields": []
        },
        {
          "Name": "charset",
          "NameAlt": "x",
          "Description": "The charset of the database.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "charset",
          "SubFields": []
        },
        {
          "Name": "collation",
          "NameAlt": "x",
          "Description": "The collation of the database.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "collation",
          "SubFields": []
        }
      ],
      "TestPrerequisitesModule": "azure_rm_postgresqlserver",
      "AssertStateVariable": "name",
      "AssertStateExpectedValue": "testdatabase",
      "ModuleOperationNameUpper": "Databases",
      "ModuleOperationName": "databases",
      "ObjectName": "PostgreSQL Database",
      "ReleaseStatus": "RP",
      "NeedsDeleteBeforeUpdate": true,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqldatabase_facts",
      "ModuleNameAlt": "azure_rm_postgresqldatabase_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValue": null,
          "DefaultValueSample": "database_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "ResponseFields": null,
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Databases",
      "ModuleOperationName": "databases",
      "ObjectName": "Databases",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqlconfiguration",
      "ModuleNameAlt": "azure_rm_postgresqlconfiguration",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "configuration_name",
          "NameAlt": "configuration_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server configuration.",
          "DefaultValue": null,
          "DefaultValueSample": "configuration_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The required parameters for updating a server configuration.",
          "DefaultValue": null,
          "DefaultValueSample": "parameters",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "value",
          "NameAlt": "value",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Value of the configuration.",
          "DefaultValue": null,
          "DefaultValueSample": "value",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        },
        {
          "Name": "source",
          "NameAlt": "source",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Source of the configuration.",
          "DefaultValue": null,
          "DefaultValueSample": "source",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "configuration_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "configuration_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "configuration_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "configuration_name",
            "parameters"
          ]
        }
      ],
      "ResponseFields": [
        {
          "Name": "id",
          "NameAlt": "id",
          "Description": "Resource ID",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "id",
          "SubFields": []
        },
        {
          "Name": "name",
          "NameAlt": "x",
          "Description": "Resource name.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "name",
          "SubFields": []
        },
        {
          "Name": "type",
          "NameAlt": "x",
          "Description": "Resource type.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "type",
          "SubFields": []
        },
        {
          "Name": "value",
          "NameAlt": "x",
          "Description": "Value of the configuration.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "value",
          "SubFields": []
        },
        {
          "Name": "description",
          "NameAlt": "x",
          "Description": "Description of the configuration.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "description",
          "SubFields": []
        },
        {
          "Name": "default_value",
          "NameAlt": "x",
          "Description": "Default value of the configuration.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "default_value",
          "SubFields": []
        },
        {
          "Name": "data_type",
          "NameAlt": "x",
          "Description": "Data type of the configuration.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "data_type",
          "SubFields": []
        },
        {
          "Name": "allowed_values",
          "NameAlt": "x",
          "Description": "Allowed values of the configuration.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "allowed_values",
          "SubFields": []
        },
        {
          "Name": "source",
          "NameAlt": "x",
          "Description": "Source of the configuration.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "source",
          "SubFields": []
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Configurations",
      "ModuleOperationName": "configurations",
      "ObjectName": "Configurations",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqlconfiguration_facts",
      "ModuleNameAlt": "azure_rm_postgresqlconfiguration_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false
        },
        {
          "Name": "configuration_name",
          "NameAlt": "configuration_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the server configuration.",
          "DefaultValue": null,
          "DefaultValueSample": "configuration_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "configuration_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "configuration_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "ResponseFields": null,
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Configurations",
      "ModuleOperationName": "configurations",
      "ObjectName": "Configurations",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_postgresqllogfile_facts",
      "ModuleNameAlt": "azure_rm_postgresqllogfile_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValue": null,
          "DefaultValueSample": "resource_group_name",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValue": null,
          "DefaultValueSample": "server_name",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false
        }
      ],
      "Methods": [
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "ResponseFields": null,
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "LogFiles",
      "ModuleOperationName": "log_files",
      "ObjectName": "LogFiles",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    }
  ],
  "Namespace": "postgresql",
  "NamespaceUpper": "Postgresql",
  "Name": "PostgreSQLManagementClient",
  "Operations": [
    "Servers[ create update delete get list_by_resource_group list MAIN FACTS ]",
    "FirewallRules[ create_or_update delete get list_by_server MAIN FACTS ]",
    "VirtualNetworkRules[ get create_or_update delete list_by_server MAIN FACTS ]",
    "Databases[ create_or_update delete get list_by_server MAIN FACTS ]",
    "Configurations[ create_or_update get list_by_server MAIN FACTS ]",
    "LogFiles[ list_by_server FACTS ]",
    "PerformanceTiers[ list ]",
    "LocationBasedPerformanceTier[ list ]",
    "CheckNameAvailability[ execute ]",
    "Operations[ list ]",
    "EXAMPLE -- ServerCreate",
    "EXAMPLE -- ServerUpdate",
    "EXAMPLE -- ServerDelete",
    "EXAMPLE -- ServerGet",
    "EXAMPLE -- ServerListByResourceGroup",
    "EXAMPLE -- ServerList",
    "EXAMPLE -- FirewallRuleCreate",
    "EXAMPLE -- FirewallRuleDelete",
    "EXAMPLE -- FirewallRuleGet",
    "EXAMPLE -- FirewallRuleList",
    "EXAMPLE -- Gets a virtual network rule",
    "EXAMPLE -- Create or update a virtual network rule",
    "EXAMPLE -- Delete a virtual network rule",
    "EXAMPLE -- List virtual network rules",
    "EXAMPLE -- DatabaseCreate",
    "EXAMPLE -- DatabaseDelete",
    "EXAMPLE -- DatabaseGet",
    "EXAMPLE -- DatabaseList",
    "EXAMPLE -- ConfigurationCreateOrUpdate",
    "EXAMPLE -- ConfigurationGet",
    "EXAMPLE -- ConfigurationList",
    "EXAMPLE -- LogFileList",
    "EXAMPLE -- PerformanceTiersList",
    "EXAMPLE -- PerformanceTiersList",
    "EXAMPLE -- NameAvailability",
    "EXAMPLE -- OperationList"
  ]
}
