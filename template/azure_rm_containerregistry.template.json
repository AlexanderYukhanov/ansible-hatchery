{
  "Modules": [
    {
      "ModuleName": "azure_rm_containerregistryregistrie",
      "ModuleNameAlt": "azure_rm_containerregistryxx",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group to which the container registry belongs.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "myResourceGroup",
            "test:default": "\"{{ resource_group }}\""
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "registry_name",
          "NameAlt": "registry_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the container registry.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "myRegistry",
            "test:default": ""
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "registry",
          "NameAlt": "registry",
          "Disposition": "dictionary",
          "Type": "dict",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The parameters for creating a container registry.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "registry",
            "test:default": ""
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        },
        {
          "Name": "location",
          "NameAlt": "location",
          "Disposition": "registry",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Resource location. If not set, location from the resource group will be used as default.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "eastus",
            "test:default": ""
          },
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "sku",
          "NameAlt": "sku",
          "Disposition": "registry",
          "Type": "dict",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The SKU of the container registry.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "{\r\n  \"name\": \"Standard\"\r\n}",
            "test:default": ""
          },
          "SubOptions": [
            {
              "Name": "name",
              "NameAlt": "name",
              "Disposition": "default",
              "Type": "str",
              "ValueIfFalse": null,
              "ValueIfTrue": null,
              "IsList": false,
              "Required": "True",
              "VariableValue": "None",
              "Documentation": "The SKU name of the container registry. Required for registry creation.",
              "DefaultValue": null,
              "DefaultValueSample": {
                "default": "Standard",
                "test:default": ""
              },
              "SubOptions": [],
              "RequiredCount": 0,
              "NoLog": false,
              "EnumValues": [
                {
                  "Key": "classic",
                  "Value": "Classic"
                },
                {
                  "Key": "basic",
                  "Value": "Basic"
                },
                {
                  "Key": "standard",
                  "Value": "Standard"
                },
                {
                  "Key": "premium",
                  "Value": "Premium"
                }
              ],
              "IncludeInDocumentation": true,
              "IncludeInArgSpec": true,
              "AdditionalInfo": "NO XML PROPERTIES --- Enum"
            }
          ],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- Model"
        },
        {
          "Name": "admin_user_enabled",
          "NameAlt": "admin_user_enabled",
          "Disposition": "registry",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The value that indicates whether the admin user is enabled.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "",
            "test:default": ""
          },
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "storage_account",
          "NameAlt": "storage_account",
          "Disposition": "registry",
          "Type": "dict",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The properties of the storage account for the container registry. Only applicable to Classic SKU.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "",
            "test:default": ""
          },
          "SubOptions": [
            {
              "Name": "id",
              "NameAlt": "id",
              "Disposition": "default",
              "Type": "str",
              "ValueIfFalse": null,
              "ValueIfTrue": null,
              "IsList": false,
              "Required": "True",
              "VariableValue": "None",
              "Documentation": "The resource ID of the storage account.",
              "DefaultValue": null,
              "DefaultValueSample": {
                "default": "",
                "test:default": ""
              },
              "SubOptions": [],
              "RequiredCount": 0,
              "NoLog": false,
              "EnumValues": [],
              "IncludeInDocumentation": true,
              "IncludeInArgSpec": true,
              "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
            }
          ],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- Model"
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "registry_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name"
          ]
        },
        {
          "Name": "create",
          "Options": [
            "resource_group_name",
            "registry_name",
            "registry"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "registry"
          ]
        },
        {
          "Name": "update",
          "Options": [
            "resource_group_name",
            "registry_name",
            "registry_update_parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "registry_update_parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "registry_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name"
          ]
        }
      ],
      "ResponseFields": [
        {
          "Name": "id",
          "NameAlt": "id",
          "Description": "The resource ID.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "id",
          "SubFields": []
        },
        {
          "Name": "name",
          "NameAlt": "x",
          "Description": "The name of the resource.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "name",
          "SubFields": []
        },
        {
          "Name": "type",
          "NameAlt": "x",
          "Description": "The type of the resource.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "type",
          "SubFields": []
        },
        {
          "Name": "location",
          "NameAlt": "x",
          "Description": "The location of the resource. This cannot be changed after the resource is created.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "location",
          "SubFields": []
        },
        {
          "Name": "tags",
          "NameAlt": "x",
          "Description": "The tags of the resource.",
          "Type": "complex",
          "Returned": "always",
          "SampleValue": "tags",
          "SubFields": []
        },
        {
          "Name": "sku",
          "NameAlt": "x",
          "Description": "The SKU of the container registry.",
          "Type": "complex",
          "Returned": "always",
          "SampleValue": "sku",
          "SubFields": [
            {
              "Name": "name",
              "NameAlt": "x",
              "Description": "The SKU name of the container registry. Required for registry creation. Possible values include: 'Classic', 'Basic', 'Standard', 'Premium'",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "name",
              "SubFields": []
            },
            {
              "Name": "tier",
              "NameAlt": "x",
              "Description": "The SKU tier based on the SKU name. Possible values include: 'Classic', 'Basic', 'Standard', 'Premium'",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "tier",
              "SubFields": []
            }
          ]
        },
        {
          "Name": "login_server",
          "NameAlt": "x",
          "Description": "The URL that can be used to log into the container registry.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "login_server",
          "SubFields": []
        },
        {
          "Name": "creation_date",
          "NameAlt": "x",
          "Description": "The creation date of the container registry in ISO8601 format.",
          "Type": "datetime",
          "Returned": "always",
          "SampleValue": "creation_date",
          "SubFields": []
        },
        {
          "Name": "provisioning_state",
          "NameAlt": "x",
          "Description": "The provisioning state of the container registry at the time the operation was called. Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "provisioning_state",
          "SubFields": []
        },
        {
          "Name": "status",
          "NameAlt": "status",
          "Description": "The status of the container registry at the time the operation was called.",
          "Type": "complex",
          "Returned": "always",
          "SampleValue": "status",
          "SubFields": [
            {
              "Name": "display_status",
              "NameAlt": "x",
              "Description": "The short label for the status.",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "display_status",
              "SubFields": []
            },
            {
              "Name": "message",
              "NameAlt": "x",
              "Description": "The detailed message for the status, including alerts and error messages.",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "message",
              "SubFields": []
            },
            {
              "Name": "timestamp",
              "NameAlt": "x",
              "Description": "The timestamp when the status was changed to the current value.",
              "Type": "datetime",
              "Returned": "always",
              "SampleValue": "timestamp",
              "SubFields": []
            }
          ]
        },
        {
          "Name": "admin_user_enabled",
          "NameAlt": "x",
          "Description": "The value that indicates whether the admin user is enabled.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "admin_user_enabled",
          "SubFields": []
        },
        {
          "Name": "storage_account",
          "NameAlt": "x",
          "Description": "The properties of the storage account for the container registry. Only applicable to Classic SKU.",
          "Type": "complex",
          "Returned": "always",
          "SampleValue": "storage_account",
          "SubFields": [
            {
              "Name": "id",
              "NameAlt": "x",
              "Description": "The resource ID of the storage account.",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "id",
              "SubFields": []
            }
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "TestPrerequisites": null,
      "TestPostrequisites": null,
      "AssertStateVariable": "",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Registries",
      "ModuleOperationName": "registries",
      "ObjectName": "Registries",
      "ReleaseStatus": "",
      "NeedsDeleteBeforeUpdate": false,
      "CannotTestUpdate": true,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_containerregistryregistrie_facts",
      "ModuleNameAlt": "azure_rm_containerregistry_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group to which the container registry belongs.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "resource_group_name",
            "test:default": "\"{{ resource_group }}\""
          },
          "SubOptions": null,
          "RequiredCount": 4,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        },
        {
          "Name": "registry_name",
          "NameAlt": "registry_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the container registry.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "registry_name",
            "test:default": ""
          },
          "SubOptions": null,
          "RequiredCount": 3,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "registry_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name"
          ]
        },
        {
          "Name": "list_credentials",
          "Options": [
            "resource_group_name",
            "registry_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name"
          ]
        },
        {
          "Name": "list_usages",
          "Options": [
            "resource_group_name",
            "registry_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name"
          ]
        },
        {
          "Name": "list_by_resource_group",
          "Options": [
            "resource_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name"
          ]
        }
      ],
      "ResponseFields": null,
      "TestPrerequisitesModule": null,
      "TestPrerequisites": [
        "- name: Create an container registry",
        "  azure_rm_containerregistry:",
        "    name: acr{{ rpfx }}",
        "    resource_group: \"{{ resource_group }}\"",
        "    location: eastus2",
        "    state: present",
        "    admin_user_enabled: true",
        "    sku: Premium",
        "    tags:",
        "        Release: beta1",
        "        Environment: Production"
      ],
      "TestPostrequisites": [
        "- name: Delete container registry",
        "  azure_rm_containerregistry:",
        "    name: acr{{ rpfx }}",
        "    resource_group: \"{{ resource_group }}\"",
        "    state: absent"
      ],
      "AssertStateVariable": "",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Registries",
      "ModuleOperationName": "registries",
      "ObjectName": "Registries",
      "ReleaseStatus": "RP",
      "NeedsDeleteBeforeUpdate": false,
      "CannotTestUpdate": true,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_containerregistryreplication",
      "ModuleNameAlt": "azure_rm_containerregistryreplication",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group to which the container registry belongs.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "myResourceGroup",
            "test:default": "\"{{ resource_group }}\""
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "registry_name",
          "NameAlt": "registry_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the container registry.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "myRegistry",
            "test:default": "acr{{ rpfx }}"
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "replication_name",
          "NameAlt": "replication_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the replication.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "myReplication",
            "test:default": "replication{{ rpfx }}"
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "replication",
          "NameAlt": "replication",
          "Disposition": "none",
          "Type": "dict",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The parameters for creating a replication.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "replication",
            "test:default": ""
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        },
        {
          "Name": "location",
          "NameAlt": "location",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Resource location. If not set, location from the resource group will be used as default.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "eastus",
            "test:default": "westus"
          },
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "registry_name",
            "replication_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "replication_name"
          ]
        },
        {
          "Name": "create",
          "Options": [
            "resource_group_name",
            "registry_name",
            "replication_name",
            "replication"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "replication_name",
            "location"
          ]
        },
        {
          "Name": "update",
          "Options": [
            "resource_group_name",
            "registry_name",
            "replication_name",
            "replication_update_parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "replication_name",
            "location"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "registry_name",
            "replication_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "replication_name"
          ]
        }
      ],
      "ResponseFields": [
        {
          "Name": "id",
          "NameAlt": "id",
          "Description": "The resource ID.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "id",
          "SubFields": []
        },
        {
          "Name": "name",
          "NameAlt": "x",
          "Description": "The name of the resource.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "name",
          "SubFields": []
        },
        {
          "Name": "type",
          "NameAlt": "x",
          "Description": "The type of the resource.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "type",
          "SubFields": []
        },
        {
          "Name": "location",
          "NameAlt": "x",
          "Description": "The location of the resource. This cannot be changed after the resource is created.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "location",
          "SubFields": []
        },
        {
          "Name": "tags",
          "NameAlt": "x",
          "Description": "The tags of the resource.",
          "Type": "complex",
          "Returned": "always",
          "SampleValue": "tags",
          "SubFields": []
        },
        {
          "Name": "provisioning_state",
          "NameAlt": "x",
          "Description": "The provisioning state of the replication at the time the operation was called. Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "provisioning_state",
          "SubFields": []
        },
        {
          "Name": "status",
          "NameAlt": "status",
          "Description": "The status of the replication at the time the operation was called.",
          "Type": "complex",
          "Returned": "always",
          "SampleValue": "status",
          "SubFields": [
            {
              "Name": "display_status",
              "NameAlt": "x",
              "Description": "The short label for the status.",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "display_status",
              "SubFields": []
            },
            {
              "Name": "message",
              "NameAlt": "x",
              "Description": "The detailed message for the status, including alerts and error messages.",
              "Type": "str",
              "Returned": "always",
              "SampleValue": "message",
              "SubFields": []
            },
            {
              "Name": "timestamp",
              "NameAlt": "x",
              "Description": "The timestamp when the status was changed to the current value.",
              "Type": "datetime",
              "Returned": "always",
              "SampleValue": "timestamp",
              "SubFields": []
            }
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "TestPrerequisites": [
        "- name: Create an container registry",
        "  azure_rm_containerregistry:",
        "    name: acr{{ rpfx }}",
        "    resource_group: \"{{ resource_group }}\"",
        "    location: eastus2",
        "    state: present",
        "    admin_user_enabled: true",
        "    sku: Premium",
        "    tags:",
        "        Release: beta1",
        "        Environment: Production"
      ],
      "TestPostrequisites": [
        "- name: Delete container registry",
        "  azure_rm_containerregistry:",
        "    name: acr{{ rpfx }}",
        "    resource_group: \"{{ resource_group }}\"",
        "    state: absent"
      ],
      "AssertStateVariable": "",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Replications",
      "ModuleOperationName": "replications",
      "ObjectName": "Replications",
      "ReleaseStatus": "RP",
      "NeedsDeleteBeforeUpdate": false,
      "CannotTestUpdate": true,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_containerregistryreplication_facts",
      "ModuleNameAlt": "azure_rm_containerregistryreplication_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group to which the container registry belongs.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "resource_group_name",
            "test:default": "\"{{ resource_group }}\""
          },
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        },
        {
          "Name": "registry_name",
          "NameAlt": "registry_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the container registry.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "registry_name",
            "test:default": "acr{{ rpfx }}"
          },
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        },
        {
          "Name": "replication_name",
          "NameAlt": "replication_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the replication.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "replication_name",
            "test:default": "replication{{ rpfx }}"
          },
          "SubOptions": null,
          "RequiredCount": 1,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "registry_name",
            "replication_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "replication_name"
          ]
        }
      ],
      "ResponseFields": null,
      "TestPrerequisitesModule": "azure_rm_containerregistryreplication",
      "TestPrerequisites": null,
      "TestPostrequisites": null,
      "AssertStateVariable": "",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Replications",
      "ModuleOperationName": "replications",
      "ObjectName": "Replications",
      "ReleaseStatus": "RP",
      "NeedsDeleteBeforeUpdate": false,
      "CannotTestUpdate": true,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_containerregistrywebhook",
      "ModuleNameAlt": "azure_rm_containerregistrywebhook",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group to which the container registry belongs.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "myResourceGroup",
            "test:default": "\"{{ resource_group }}\""
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "registry_name",
          "NameAlt": "registry_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the container registry.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "myRegistry",
            "test:default": "acr{{ rpfx }}"
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "webhook_name",
          "NameAlt": "webhook_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the webhook.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "myWebhook",
            "test:default": "webhook{{ rpfx }}"
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "webhook_create_parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The parameters for creating a webhook.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "webhook_create_parameters",
            "test:default": ""
          },
          "SubOptions": null,
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        },
        {
          "Name": "location",
          "NameAlt": "location",
          "Disposition": "webhook_create_parameters",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Resource location. If not set, location from the resource group will be used as default.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "eastus",
            "test:default": "eastus2"
          },
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "service_uri",
          "NameAlt": "service_uri",
          "Disposition": "webhook_create_parameters",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The service URI for the webhook to post notifications.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "",
            "test:default": "http://serviceuri.com"
          },
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "custom_headers",
          "NameAlt": "custom_headers",
          "Disposition": "webhook_create_parameters",
          "Type": "dict",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Custom headers that will be added to the webhook notifications.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "",
            "test:default": ""
          },
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- Dictionary"
        },
        {
          "Name": "status",
          "NameAlt": "status",
          "Disposition": "webhook_create_parameters",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The status of the webhook at the time the operation was called.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "",
            "test:default": ""
          },
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [
            {
              "Key": "enabled",
              "Value": "enabled"
            },
            {
              "Key": "disabled",
              "Value": "disabled"
            }
          ],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- Enum"
        },
        {
          "Name": "scope",
          "NameAlt": "scope",
          "Disposition": "webhook_create_parameters",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "",
            "test:default": ""
          },
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- PrimaryType"
        },
        {
          "Name": "actions",
          "NameAlt": "actions",
          "Disposition": "webhook_create_parameters",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": true,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The list of actions that trigger the webhook to post notifications.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "",
            "test:default": "push"
          },
          "SubOptions": [],
          "RequiredCount": 0,
          "NoLog": false,
          "EnumValues": [],
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": "NO XML PROPERTIES --- Dictionary"
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "registry_name",
            "webhook_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "webhook_name"
          ]
        },
        {
          "Name": "create",
          "Options": [
            "resource_group_name",
            "registry_name",
            "webhook_name",
            "webhook_create_parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "webhook_name",
            "webhook_create_parameters"
          ]
        },
        {
          "Name": "update",
          "Options": [
            "resource_group_name",
            "registry_name",
            "webhook_name",
            "webhook_update_parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "webhook_name",
            "webhook_update_parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "registry_name",
            "webhook_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "webhook_name"
          ]
        }
      ],
      "ResponseFields": [
        {
          "Name": "id",
          "NameAlt": "id",
          "Description": "The resource ID.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "id",
          "SubFields": []
        },
        {
          "Name": "name",
          "NameAlt": "x",
          "Description": "The name of the resource.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "name",
          "SubFields": []
        },
        {
          "Name": "type",
          "NameAlt": "x",
          "Description": "The type of the resource.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "type",
          "SubFields": []
        },
        {
          "Name": "location",
          "NameAlt": "x",
          "Description": "The location of the resource. This cannot be changed after the resource is created.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "location",
          "SubFields": []
        },
        {
          "Name": "tags",
          "NameAlt": "x",
          "Description": "The tags of the resource.",
          "Type": "complex",
          "Returned": "always",
          "SampleValue": "tags",
          "SubFields": []
        },
        {
          "Name": "status",
          "NameAlt": "status",
          "Description": "The status of the webhook at the time the operation was called. Possible values include: 'enabled', 'disabled'",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "status",
          "SubFields": []
        },
        {
          "Name": "scope",
          "NameAlt": "x",
          "Description": "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "scope",
          "SubFields": []
        },
        {
          "Name": "actions",
          "NameAlt": "x",
          "Description": "The list of actions that trigger the webhook to post notifications.",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "actions",
          "SubFields": []
        },
        {
          "Name": "provisioning_state",
          "NameAlt": "x",
          "Description": "The provisioning state of the webhook at the time the operation was called. Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'",
          "Type": "str",
          "Returned": "always",
          "SampleValue": "provisioning_state",
          "SubFields": []
        }
      ],
      "TestPrerequisitesModule": "",
      "TestPrerequisites": [
        "- name: Create an container registry",
        "  azure_rm_containerregistry:",
        "    name: acr{{ rpfx }}",
        "    resource_group: \"{{ resource_group }}\"",
        "    location: eastus2",
        "    state: present",
        "    admin_user_enabled: true",
        "    sku: Premium",
        "    tags:",
        "        Release: beta1",
        "        Environment: Production"
      ],
      "TestPostrequisites": [
        "- name: Delete container registry",
        "  azure_rm_containerregistry:",
        "    name: acr{{ rpfx }}",
        "    resource_group: \"{{ resource_group }}\"",
        "    state: absent"
      ],
      "AssertStateVariable": "",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Webhooks",
      "ModuleOperationName": "webhooks",
      "ObjectName": "Webhooks",
      "ReleaseStatus": "RP",
      "NeedsDeleteBeforeUpdate": false,
      "CannotTestUpdate": true,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    },
    {
      "ModuleName": "azure_rm_containerregistrywebhook_facts",
      "ModuleNameAlt": "azure_rm_containerregistrywebhook_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group to which the container registry belongs.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "resource_group_name",
            "test:default": "\"{{ resource_group }}\""
          },
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        },
        {
          "Name": "registry_name",
          "NameAlt": "registry_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the container registry.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "registry_name",
            "test:default": "acr{{ rpfx }}"
          },
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        },
        {
          "Name": "webhook_name",
          "NameAlt": "webhook_name",
          "Disposition": "default",
          "Type": "str",
          "ValueIfFalse": null,
          "ValueIfTrue": null,
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the webhook.",
          "DefaultValue": null,
          "DefaultValueSample": {
            "default": "webhook_name",
            "test:default": "webhook{{ rpfx }}"
          },
          "SubOptions": null,
          "RequiredCount": 2,
          "NoLog": false,
          "EnumValues": null,
          "IncludeInDocumentation": true,
          "IncludeInArgSpec": true,
          "AdditionalInfo": null
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "registry_name",
            "webhook_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "webhook_name"
          ]
        },
        {
          "Name": "list_events",
          "Options": [
            "resource_group_name",
            "registry_name",
            "webhook_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "registry_name",
            "webhook_name"
          ]
        }
      ],
      "ResponseFields": null,
      "TestPrerequisitesModule": "azure_rm_containerregistrywebhook",
      "TestPrerequisites": null,
      "TestPostrequisites": null,
      "AssertStateVariable": "",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Webhooks",
      "ModuleOperationName": "webhooks",
      "ObjectName": "Webhooks",
      "ReleaseStatus": "RP",
      "NeedsDeleteBeforeUpdate": false,
      "CannotTestUpdate": true,
      "UpdateComparisonRules": null,
      "TestReplaceStringFrom": null,
      "TestReplaceStringTo": null
    }
  ],
  "Namespace": "containerregistry",
  "NamespaceUpper": "Containerregistry",
  "Name": "ContainerRegistryManagementClient",
  "ApiVersion": "",
  "Operations": [
    "Registries[ check_name_availability get create delete update list_by_resource_group list list_credentials regenerate_credential list_usages MAIN FACTS ]",
    "Operations[ list ]",
    "Replications[ get create delete update list MAIN FACTS ]",
    "Webhooks[ get create delete update list ping get_callback_config list_events MAIN FACTS ]",
    "EXAMPLE -- RegistryCheckNameAvailable",
    "EXAMPLE OBJECT -- {\"RegistryCheckNameAvailable\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"registryNameCheckRequest\":{\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\"}},\"responses\":{\"200\":{\"body\":{\"nameAvailable\":true}}}},\"RegistryCheckNameNotAvailable\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"registryNameCheckRequest\":{\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\"}},\"responses\":{\"200\":{\"body\":{\"nameAvailable\":false,\"reason\":\"AlreadyExists\",\"message\":\"The registry myRegistry is already in use.\"}}}}}",
    "EXAMPLE -- RegistryCheckNameNotAvailable",
    "EXAMPLE OBJECT -- {\"RegistryCheckNameAvailable\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"registryNameCheckRequest\":{\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\"}},\"responses\":{\"200\":{\"body\":{\"nameAvailable\":true}}}},\"RegistryCheckNameNotAvailable\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"registryNameCheckRequest\":{\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\"}},\"responses\":{\"200\":{\"body\":{\"nameAvailable\":false,\"reason\":\"AlreadyExists\",\"message\":\"The registry myRegistry is already in use.\"}}}}}",
    "EXAMPLE -- RegistryGet",
    "EXAMPLE OBJECT -- {\"RegistryGet\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\"},\"responses\":{\"200\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry\",\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"sku\":{\"name\":\"Standard\",\"tier\":\"Standard\"},\"properties\":{\"loginServer\":\"myregistry.azurecr.io\",\"creationDate\":\"2017-03-01T23:14:37.0707808Z\",\"provisioningState\":\"Succeeded\",\"status\":{\"displayStatus\":\"Ready\",\"message\":\"The registry is ready.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"},\"adminUserEnabled\":true}}}}}}",
    "EXAMPLE -- RegistryCreate",
    "EXAMPLE OBJECT -- {\"RegistryCreate\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"registry\":{\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"sku\":{\"name\":\"Standard\"},\"properties\":{\"adminUserEnabled\":true}}},\"responses\":{\"200\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry\",\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"sku\":{\"name\":\"Standard\",\"tier\":\"Standard\"},\"properties\":{\"loginServer\":\"myregistry.azurecr.io\",\"creationDate\":\"2017-03-01T23:14:37.0707808Z\",\"provisioningState\":\"Succeeded\",\"status\":{\"displayStatus\":\"Ready\",\"message\":\"The registry is ready.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"},\"adminUserEnabled\":true}}},\"201\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry\",\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"sku\":{\"name\":\"Standard\",\"tier\":\"Standard\"},\"properties\":{\"loginServer\":\"myregistry.azurecr.io\",\"creationDate\":\"2017-03-01T23:14:37.0707808Z\",\"provisioningState\":\"Creating\",\"status\":{\"displayStatus\":\"Provisioning\",\"message\":\"The registry is provisioning.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"},\"adminUserEnabled\":true}}}}}}",
    "EXAMPLE -- RegistryDelete",
    "EXAMPLE OBJECT -- {\"RegistryDelete\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\"},\"responses\":{\"200\":{},\"202\":{},\"204\":{}}}}",
    "EXAMPLE -- RegistryUpdate",
    "EXAMPLE OBJECT -- {\"RegistryUpdate\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"registryUpdateParameters\":{\"tags\":{\"key\":\"value\"},\"sku\":{\"name\":\"Standard\"},\"properties\":{\"adminUserEnabled\":true}}},\"responses\":{\"200\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry\",\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"sku\":{\"name\":\"Standard\",\"tier\":\"Standard\"},\"properties\":{\"loginServer\":\"myregistry.azurecr.io\",\"creationDate\":\"2017-03-01T23:14:37.0707808Z\",\"provisioningState\":\"Succeeded\",\"status\":{\"displayStatus\":\"Ready\",\"message\":\"The registry is ready.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"},\"adminUserEnabled\":true}}},\"201\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry\",\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"sku\":{\"name\":\"Standard\",\"tier\":\"Standard\"},\"properties\":{\"loginServer\":\"myregistry.azurecr.io\",\"creationDate\":\"2017-03-01T23:14:37.0707808Z\",\"provisioningState\":\"Updating\",\"status\":{\"displayStatus\":\"Provisioning\",\"message\":\"The registry is provisioning.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"},\"adminUserEnabled\":true}}}}}}",
    "EXAMPLE -- RegistryListByResourceGroup",
    "EXAMPLE OBJECT -- {\"RegistryListByResourceGroup\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\"},\"responses\":{\"200\":{\"body\":{\"value\":[{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry\",\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"sku\":{\"name\":\"Standard\",\"tier\":\"Standard\"},\"properties\":{\"loginServer\":\"myregistry.azurecr.io\",\"creationDate\":\"2017-03-01T23:14:37.0707808Z\",\"provisioningState\":\"Succeeded\",\"status\":{\"displayStatus\":\"Ready\",\"message\":\"The registry is ready.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"},\"adminUserEnabled\":true}}]}}}}}",
    "EXAMPLE -- RegistryList",
    "EXAMPLE OBJECT -- {\"RegistryList\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\"},\"responses\":{\"200\":{\"body\":{\"value\":[{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry\",\"name\":\"myRegistry\",\"type\":\"Microsoft.ContainerRegistry/registries\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"sku\":{\"name\":\"Standard\",\"tier\":\"Standard\"},\"properties\":{\"loginServer\":\"myregistry.azurecr.io\",\"creationDate\":\"2017-03-01T23:14:37.0707808Z\",\"provisioningState\":\"Succeeded\",\"status\":{\"displayStatus\":\"Ready\",\"message\":\"The registry is ready.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"},\"adminUserEnabled\":true}}]}}}}}",
    "EXAMPLE -- RegistryListCredentials",
    "EXAMPLE OBJECT -- {\"RegistryListCredentials\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\"},\"responses\":{\"200\":{\"body\":{\"username\":\"myRegistry\",\"passwords\":[{\"name\":\"password\",\"value\":\"00000000000000000000000000000000\"},{\"name\":\"password2\",\"value\":\"00000000000000000000000000000000\"}]}}}}}",
    "EXAMPLE -- RegistryRegenerateCredential",
    "EXAMPLE OBJECT -- {\"RegistryRegenerateCredential\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"regenerateCredentialParameters\":{\"name\":\"password\"}},\"responses\":{\"200\":{\"body\":{\"username\":\"myRegistry\",\"passwords\":[{\"name\":\"password\",\"value\":\"00000000000000000000000000000000\"},{\"name\":\"password2\",\"value\":\"00000000000000000000000000000000\"}]}}}}}",
    "EXAMPLE -- RegistryListUsages",
    "EXAMPLE OBJECT -- {\"RegistryListUsages\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\"},\"responses\":{\"200\":{\"body\":{\"value\":[{\"name\":\"Size\",\"limit\":\"107374182400\",\"currentValue\":\"12345678\",\"unit\":\"Bytes\"},{\"name\":\"Webhooks\",\"limit\":\"10\",\"currentValue\":\"2\",\"unit\":\"Count\"}]}}}}}",
    "EXAMPLE -- ReplicationGet",
    "EXAMPLE OBJECT -- {\"ReplicationGet\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"replicationName\":\"myReplication\"},\"responses\":{\"200\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/replications/myReplication\",\"name\":\"myReplication\",\"type\":\"Microsoft.ContainerRegistry/registries/replications\",\"location\":\"eastus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"provisioningState\":\"Succeeded\",\"status\":{\"displayStatus\":\"Ready\",\"message\":\"The replication is ready.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"}}}}}}}",
    "EXAMPLE -- ReplicationCreate",
    "EXAMPLE OBJECT -- {\"ReplicationCreate\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"replicationName\":\"myReplication\",\"replication\":{\"location\":\"eastus\",\"tags\":{\"key\":\"value\"}}},\"responses\":{\"200\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/replications/myReplication\",\"name\":\"myReplication\",\"type\":\"Microsoft.ContainerRegistry/registries/replications\",\"location\":\"eastus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"provisioningState\":\"Succeeded\",\"status\":{\"displayStatus\":\"Ready\",\"message\":\"The replication is ready.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"}}}},\"201\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/replications/myReplication\",\"name\":\"myReplication\",\"type\":\"Microsoft.ContainerRegistry/registries/replications\",\"location\":\"eastus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"provisioningState\":\"Creating\",\"status\":{\"displayStatus\":\"Provisioning\",\"message\":\"The replication is provisioning.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"}}}}}}}",
    "EXAMPLE -- ReplicationDelete",
    "EXAMPLE OBJECT -- {\"ReplicationDelete\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"replicationName\":\"myReplication\"},\"responses\":{\"200\":{},\"202\":{},\"204\":{}}}}",
    "EXAMPLE -- ReplicationUpdate",
    "EXAMPLE OBJECT -- {\"ReplicationUpdate\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"replicationName\":\"myReplication\",\"replicationUpdateParameters\":{\"tags\":{\"key\":\"value\"}}},\"responses\":{\"200\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/replications/myReplication\",\"name\":\"myReplication\",\"type\":\"Microsoft.ContainerRegistry/registries/replications\",\"location\":\"eastus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"provisioningState\":\"Succeeded\",\"status\":{\"displayStatus\":\"Ready\",\"message\":\"The replication is ready.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"}}}},\"201\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/replications/myReplication\",\"name\":\"myReplication\",\"type\":\"Microsoft.ContainerRegistry/registries/replications\",\"location\":\"eastus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"provisioningState\":\"Updating\",\"status\":{\"displayStatus\":\"Provisioning\",\"message\":\"The replication is provisioning.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"}}}}}}}",
    "EXAMPLE -- ReplicationList",
    "EXAMPLE OBJECT -- {\"ReplicationList\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\"},\"responses\":{\"200\":{\"body\":{\"value\":[{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/replications/myReplication\",\"name\":\"myReplication\",\"type\":\"Microsoft.ContainerRegistry/registries/replications\",\"location\":\"eastus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"provisioningState\":\"Succeeded\",\"status\":{\"displayStatus\":\"Ready\",\"message\":\"The replication is ready.\",\"timestamp\":\"2017-03-01T23:15:37.0707808Z\"}}}]}}}}}",
    "EXAMPLE -- WebhookGet",
    "EXAMPLE OBJECT -- {\"WebhookGet\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"webhookName\":\"myWebhook\"},\"responses\":{\"200\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/webhooks/myWebhook\",\"name\":\"myWebhook\",\"type\":\"Microsoft.ContainerRegistry/registries/webhooks\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"status\":\"enabled\",\"scope\":\"myRepository\",\"actions\":[\"push\"],\"provisioningState\":\"Succeeded\"}}}}}}",
    "EXAMPLE -- WebhookCreate",
    "EXAMPLE OBJECT -- {\"WebhookCreate\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"webhookName\":\"myWebhook\",\"webhookCreateParameters\":{\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"serviceUri\":\"http://myservice.com\",\"customHeaders\":{\"Authorization\":\"Basic 000000000000000000000000000000000000000000000000000\"},\"status\":\"enabled\",\"scope\":\"myRepository\",\"actions\":[\"push\"]}}},\"responses\":{\"200\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/webhooks/myWebhook\",\"name\":\"myWebhook\",\"type\":\"Microsoft.ContainerRegistry/registries/webhooks\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"status\":\"enabled\",\"scope\":\"myRepository\",\"actions\":[\"push\"],\"provisioningState\":\"Succeeded\"}}},\"201\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/webhooks/myWebhook\",\"name\":\"myWebhook\",\"type\":\"Microsoft.ContainerRegistry/registries/webhooks\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"status\":\"enabled\",\"scope\":\"myRepository\",\"actions\":[\"push\"],\"provisioningState\":\"Creating\"}}}}}}",
    "EXAMPLE -- WebhookDelete",
    "EXAMPLE OBJECT -- {\"WebhookDelete\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"webhookName\":\"myWebhook\"},\"responses\":{\"200\":{},\"202\":{},\"204\":{}}}}",
    "EXAMPLE -- WebhookUpdate",
    "EXAMPLE OBJECT -- {\"WebhookUpdate\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"webhookName\":\"myWebhook\",\"webhookUpdateParameters\":{\"tags\":{\"key\":\"value\"},\"properties\":{\"serviceUri\":\"http://myservice.com\",\"customHeaders\":{\"Authorization\":\"Basic 000000000000000000000000000000000000000000000000000\"},\"status\":\"enabled\",\"scope\":\"myRepository\",\"actions\":[\"push\"]}}},\"responses\":{\"200\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/webhooks/myWebhook\",\"name\":\"myWebhook\",\"type\":\"Microsoft.ContainerRegistry/registries/webhooks\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"status\":\"enabled\",\"scope\":\"myRepository\",\"actions\":[\"push\"],\"provisioningState\":\"Succeeded\"}}},\"201\":{\"body\":{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/webhooks/myWebhook\",\"name\":\"myWebhook\",\"type\":\"Microsoft.ContainerRegistry/registries/webhooks\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"status\":\"enabled\",\"scope\":\"myRepository\",\"actions\":[\"push\"],\"provisioningState\":\"Updating\"}}}}}}",
    "EXAMPLE -- WebhookList",
    "EXAMPLE OBJECT -- {\"WebhookList\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\"},\"responses\":{\"200\":{\"body\":{\"value\":[{\"id\":\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/webhooks/myWebhook\",\"name\":\"myWebhook\",\"type\":\"Microsoft.ContainerRegistry/registries/webhooks\",\"location\":\"westus\",\"tags\":{\"key\":\"value\"},\"properties\":{\"status\":\"enabled\",\"scope\":\"myRepository\",\"actions\":[\"push\"],\"provisioningState\":\"Succeeded\"}}]}}}}}",
    "EXAMPLE -- WebhookPing",
    "EXAMPLE OBJECT -- {\"WebhookPing\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"webhookName\":\"myWebhook\"},\"responses\":{\"200\":{\"body\":{\"id\":\"00000000-0000-0000-0000-000000000000\"}}}}}",
    "EXAMPLE -- WebhookGetCallbackConfig",
    "EXAMPLE OBJECT -- {\"WebhookGetCallbackConfig\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"webhookName\":\"myWebhook\"},\"responses\":{\"200\":{\"body\":{\"serviceUri\":\"http://myservice.com\",\"customHeaders\":{\"Authorization\":\"Basic 000000000000000000000000000000000000000000000000000\"}}}}}}",
    "EXAMPLE -- WebhookListEvents",
    "EXAMPLE OBJECT -- {\"WebhookListEvents\":{\"parameters\":{\"api-version\":\"2017-10-01\",\"subscriptionId\":\"00000000-0000-0000-0000-000000000000\",\"resourceGroupName\":\"myResourceGroup\",\"registryName\":\"myRegistry\",\"webhookName\":\"myWebhook\"},\"responses\":{\"200\":{\"body\":{\"value\":[{\"id\":\"00000000-0000-0000-0000-000000000000\",\"eventRequestMessage\":{\"content\":{\"id\":\"00000000-0000-0000-0000-000000000000\",\"timestamp\":\"2017-03-01T23:14:37.0707808Z\",\"action\":\"push\",\"target\":{\"mediaType\":\"application/vnd.docker.distribution.manifest.v2+json\",\"size\":\"708\",\"digest\":\"sha256:fea8895f450959fa676bcc1df0611ea93823a735a01205fd8622846041d0c7cf\",\"length\":\"708\",\"repository\":\"hello-world\",\"url\":\"http://192.168.100.227:5000/v2/hello-world/manifests/sha256:fea8895f450959fa676bcc1df0611ea93823a735a01205fd8622846041d0c7cf\",\"tag\":\"latest\"},\"request\":{\"id\":\"00000000-0000-0000-0000-000000000000\",\"addr\":\"192.168.64.11:42961\",\"host\":\"192.168.100.227:5000\",\"method\":\"GET\",\"useragent\":\"curl/7.38.0\"},\"actor\":{},\"source\":{\"addr\":\"xtal.local:5000\",\"instanceID\":\"00000000-0000-0000-0000-000000000000\"}},\"headers\":{\"Content-Type\":\"application/json\",\"Content-Length\":\"719\",\"Authorization\":\"******\"},\"method\":\"POST\",\"requestUri\":\"http://myservice.com\",\"version\":\"1.1\"},\"eventResponseMessage\":{\"headers\":{\"Content-Length\":\"0\"},\"statusCode\":\"200\",\"version\":\"1.1\"}}]}}}}}"
  ]
}
